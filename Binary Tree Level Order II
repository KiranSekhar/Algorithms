class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root) return ans;
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty()){
            int s=q.size();
            vector<int> z;
            for(int i=0;i<s;i++){
                if(q.front()->left) q.push(q.front()->left);
                if(q.front()->right) q.push(q.front()->right);
                z.push_back(q.front()->val);
                q.pop();
            }
            ans.push_back(z);
        }
        int n=ans.size();
        for(int i=0;i<n/2;i++){
            vector<int> &v1=ans[i];
            vector<int> &v2=ans[n-i-1];
            v1.swap(v2);
        }
        return ans;
    }
};
